<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAMBQTFRF////
        itZN2u33NlVmI0lcwcnN3vD6KEtdjt1LjNlMO1xkqb3Jq8DLME1ncK1W4vX/VW58RGJxNFJmMk9nMU5n
        L0pngspPQF5vOFhlLkloPmFkYphahc5PLU9hNFFmfsNRsbvBhJuobKhXXZFcaKJYQWZjzdTYgchQboKN
        VoZe6Ovte75SRWxiTnpglqy48/X2dLVUSnRhUX9fkZ+ouM3YXpJbu8PIgZGb2t/hpLC3aHyIWoxdfI2X
        WnJ/yN3nbH+LAs0DoAAACI9JREFUeF7tnWt3ojoUQOWCo+k0joBIfYCO7/q4Wr3taLUz//9f3QUExUA0
        SETCZH/qCLRsT5JzcmQ5hYJAIBAIBBlmuvujmp/dJf56PliONqpSsmTZUqwufpB/pt2JqViyj7LBT+Cb
        0Ua1AnquYn6iOO1OFMzOxcrFXFyONl+RevkI4vTjYLoLSxBNN168n6wJfgFfbHfVUih4NtSHrRmQdPdf
        VfwaflgWf8lKCbPTdPi06NXLAEjlJ/cVFb+OE7a7T3zZlGUNwmF/1S4DyYFjw2Xxl1qKmHnGYjCWgKfH
        seF0F7Fs2tBu7lcBO14Nl0VUjwVxls3FoAPO9U6GcjUBn5stfhP3Y9v9I4eCp9Uazf2qHdYLGCbBspTJ
        FL+TuzDaRM08COeDDjY2T7AwdCTluytG1mNaTW++ViQnK5BgZChbJn5HLFmONtWwng61t9aMGDwEK0O5
        tMNvixXTj4kZkdIbL6+VeuTMO4eZoazepXrfbtRQPabZ0J63ZhR2Dr6hejumdwMK8wV1+nGIrMeaa68e
        o8PPhz8S8NNVVIr4HSZiu/sK12M2hPP3mV+P0eEbfvvnZr49u+8zQ8Nl8WBGZAUDLgb1awtLCBaG35ka
        Euux/grECh4iW4bx6jE6MmS43X1G1WMGsR6jIyuGhHpMn98ePEQWDMn1mLONTaSXBcPI/hiqx25ZWEI8
        2LCrKhY+NmtOPZZk5p3zWMOJgtnZUKOvx+h4qOHhTNCtxyox6jE6HmlYDAg69VgrZj1GxyMNv9AM1HRD
        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
        SUVORK5CYII=
</value>
  </data>
</root>