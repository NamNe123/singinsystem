<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCADvAO8DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDt6KKSqEFLSUUAL3opO9FAC0UlFAC0UlFAC0UlFABS0lFABS0l
        FAC0lFFAC0UlFAC0UlFAC0UlFAC0UlFAC0lFFAC0UlLQAlFLSUAFFFLQAneil70lABRS0UAJRS0UAJRS
        0UAJRRS0AJRRRQAUUtJQAUUtFACUUtFACUUtFACUUtJQAUUtJQAUUUtABSUtJQAUtJRQAd6KO9FABS0l
        FABRRRQAUUVpabpwmUTzjKH7qevufagDN9Pfp71KtvM/3YpD77TiuiWGJGLKihj3xzUh5+nvRcDmTbyr
        1Qj8RUZUr1FdOYoyOY0P1UVG1nbN1gj/AAXFFwOcpK3pNJtX+6rIfY1Tl0WRcmFw/seDQBnUlOkieFts
        iFW9CKbQAtJRRQAUUUUAFFFFAC0lFFABS0lLQAUlLSUAFLSUtACd6KXvSUAFLRRQAlTW1rJdSbYwAO7H
        oKh6Vv6baiC2V2H7xxk+w7CgCOLRoEX96zSN9cD9KvoqogVRhVGAKWikAUUUUAFFFFABRRRQBHNDHcIU
        kUMP5VhXti1o/wDejb7rf0NdDTJYlmiaNxlWFAHL0VLcQNbztE3Veh9R61HTASilooASilpKAFpKWkoA
        KWkpaACkpaSgApaSloATvRR3ooAKWkpaAE/DPtXUoCI1DHLY5PvXNQDdcRL6uo/WunPegAooopAFFFFA
        BRRRQAUUUUAFFFFAGdrFvvhEyj5k4P0rFrqXjEsbRt0YEVy5BVip6g4NNAJRRRQAUUUUALSUtJQAUtJS
        0AFJS0lABS0lLQAneil70lABS0UUASWvF3D/ANdF/nXTGuWjbZIjf3WBrqevPrQwCiiikAUUUUAFFFFA
        BRRRQAUUUUAFc5frsv5h/tZ/PmujrndQbdfzH/ax+VAFailopgJRS0lAC0lLSUAFLSUtACUUtJQAUUUt
        ACd6KXvSUAFFLRQAldJZS+dZxPnJ24P1HFYFtAbi4jizjceT6CugtrZbWLy0ZiM5+Y0ATUUUUgEpaKKA
        EpaKKACkpaKACiiigAzjk9K5aV/Mld/7zE11DqHRlOcMMHFYepWSWjIY87HB4JzgimBRoopaAEopaSgA
        opaSgApaSloASilpKACiiigA70Ud6KACiiigC1prBdQiJOOSP0roa5UEqQw4IORXTQS+fbxyd2XNJgSU
        UUUAJS0UUAJS0UUAFJS0lAC0UUUAFYmsTb7wRg8Rrj8Tz/hW2OormbmTzbmR/wC8xNCAiooopgFFFFAB
        RRRQAUtJS0AFJRRQAUtJRQAveko70UALRSUUAFbejzb7doj1jPH0NYlS21w9rMJEwexB7igDpqKr2d39
        shZ9u3DYxnNWKQBRSUtABRSUUALRRSUALRRUN1N9ntZJRjKjgH1oAS9n+z2kj55xtX6mubq1eXz3m0Mo
        VV7A9/WqtNALRSUUALSUUUALSUUUAFLSUUALSUtJQAUtJS0AHeko70UALRSUtABRSUUAaWjTbZniJ++M
        j6itmuWjkaKRXQ4ZTkV0tvMtxAkqjAYdPSkwJKKKKACiiigAooooAKzdalCwRxDqzbj9BWl3rnb+4Fzd
        s4+6PlX6UICvRRSUwFopKKAFpKKKAFpKWkoAKWkpaACkpaSgApaSloAO9JR3ooAWikpaACikooAK6HTB
        jT4voT+prASNpXCRqWY9hXR2kbQ2kUb/AHlUA49aGBNRRRSAKKKKACiiigBD0P0NcrXV1zM9rLbNiVCB
        2PY00BHRSUUALRSUUALSUUUALSUtJQAUtJS0AFJS0lABS0lLQAneijvRQAUtJkVZg0+5n5WPav8Aefgf
        40AVqntLV7ubYgwo+82OAK04NGiQZnYyH0HArQRVjUKgCqOgAwKAI7e2itY9sS49Sep+pqWiikAUUUUA
        FFFFABRRRQAU10WRCrqGU9QadRQBg31g1s5ZATEeh9PrVKur4PXmqU+lW83K5jb/AGen5UwMGirs2lXE
        WSoEi/7PX8qpkFSQwII7EUAJRRRQAtJS0lABS0lLQAUlLQASQByTxgd6AEoNXrfSZ5sGTES+/J/KtKDT
        beDB2b2H8T8//WoAxYLSe4x5UTEf3jwPzrQh0ToZ5f8AgKD+tatFK4EMNnBb8xRAH+8eT+dTdaKKACii
        igAooooAKKKKACiiigAoopKAFooooAKKKKACo5YY5xiWNW+oqSigDMn0ZG5hcp7NyKz57G4gyXjJX+8v
        Iro6KAOUoro5rG3nyXjG4/xLwaz59GdcmBw4/utwaYGZS0ro0bFXUqw6g0lACxxtLIqRrlmOAK37Kwjt
        EB4aU9XP9Kq6NbbY2uG6t8q/T/8AXWnSAWikpaADvRSd6KAFopKWgAopKKAFopKWgAopKWgAopKKAFoo
        pKAFoopKAFoopKAFopKKAFopKKAFoopKAIbu0ju48Nw4+63cVz00TQStG4wy11FZ2rWhmCSRgbwdp+lC
        AvxRrDEsa/dUYFOoooASloooAO9FHeigAooooAKKKKACiiigAooooAKKKKACkpaKACiiigAooooAKKKK
        ACiiigApKWigAooooA//2Q==
</value>
  </data>
</root>